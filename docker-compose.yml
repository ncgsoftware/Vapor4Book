# Docker Compose file for Vapor
#
# Install Docker on your system to run and test
# your Vapor app in a production-like environment.
#
# Note: This file is intended for testing and does not
# implement best practices for a production deployment.
#
# Learn more: https://docs.docker.com/compose/reference/
#
#   Build images: docker-compose build
#      Start app: docker-compose up app
# Start database: docker-compose up db
# Run migrations: docker-compose up migrate
#       Stop all: docker-compose down (add -v to wipe db)
#
version: '3.7'

volumes:
  db_data:

x-shared_environment: &shared_environment
  LOG_LEVEL: ${LOG_LEVEL:-debug}
  PSQL_CRED: postgres://vapor_username:vapor_password@db:5432/vapor_database?ssl=false
  JWKS: '{"keys":[{"kty":"RSA","d":"BGSH12mVZbAlYny1C9KlswOORGsz0odL_NmvU-6mA_nNxXKz6nQIK6Il6L8VPYa9dZb1HwkFRDdyWqLYmjrTlQZievU9VLvmWaUlKXyIwOiXF3vqmzQy_luR-lE5v05pOqUgPhnPrQtGPvSuQpAYLFSJCX9YLJdmI0LA-0G_AvVnSjjSBnmvwZEKfHsZSRRC_cDOk8pm4A3iEMQv1_3xdwZ5GeKtkuAdNi9T31lMNlnKj-A5hZq6rfwiAWdxvCPqg44EyCKhj6c6sm2aM0qqKYb3sYMkYRmZh4GzaX8yQB3roQG-FLZ18VRm9q9YPuFavOL_L_NC8JG2Z6use4DbsQ","e":"AQAB","use":"sig","kid":"backend","alg":"RS256","n":"ghZ4Eb-LT2tcCfWI6Szxu25kLQ3LOADA-KydgxASz_jMb5IHxMQIwMKFXe5qQ8lIG1lFhdu2G51GdXA8vaY148UtYt_COUnQSYOfIhcp7WpPXXhu83vqjET78CzkLsDI8VmF-9d8dHvtSVUqXfkk83kLOYmBcEamMWICUJj1yTiipqknuDZSMfIccXdhWEXr8gpl1cVZ5G2QZVNpFl1wGJ2UvwbQx6t9M6LDD9c9pqKc2-1X7pNLb-UekxhYzJHeRko288REN8AR7czaMQtZrB2hTEJAVixUu6KPGfSHxp49K2Hy2a1UC0nlohcrJ0ERfgMJ6oZ_n_kYeLx6nHeimw"}]}'
  SENDGRID_API_KEY: asdf
  
services:
  app:
    image: userservice:latest
    build:
      context: .
    environment:
      <<: *shared_environment
    depends_on:
      - db
    ports:
      - '8080:80'
    command: ["serve", "--env", "production", "--hostname", "0.0.0.0", "--port", "80"]
  migrate:
    image: userservice:latest
    build:
      context: .
    environment:
      <<: *shared_environment
    depends_on:
      - db
    command: ["migrate", "--yes"]
    deploy:
      replicas: 0
  revert:
    image: userservice:latest
    build:
      context: .
    environment:
      <<: *shared_environment
    depends_on:
      - db
    command: ["migrate", "--revert", "--yes"]
  db:
    image: postgres:12.1-alpine
    volumes:
        - db_data:/var/lib/postgresql/data/pgdata
    environment:
        PGDATA: /var/lib/postgresql/data/pgdata
        POSTGRES_USER: vapor_username
        POSTGRES_PASSWORD: vapor_password
        POSTGRES_DB: vapor_database
    expose:
        - 5432
    ports:
        - '5432:5432'
